name: Publish to NPM
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true
env:
  CI: true
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Setup npmrc
      run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
    - name: Git configuration
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm build
    - name: Bump release version
      if: startsWith(github.event.inputs.release-type, 'pre') != true
      run: |
        echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
        echo "RELEASE_TAG=latest" >> $GITHUB_ENV
      env:
        RELEASE_TYPE: ${{ github.event.inputs.release-type }}
    - name: Bump pre-release version
      if: startsWith(github.event.inputs.release-type, 'pre')
      run: |
        echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE
        echo "RELEASE_TAG=beta" >> $GITHUB_ENV
      env:
        RELEASE_TYPE: ${{ github.event.inputs.release-type }}
    - name: Commit package.json change and create tag
      run: |
        git add "package.json"
        git commit -m "chore: release ${{ env.NEW_VERSION }}"
        git tag ${{ env.NEW_VERSION }}
    - name: Publish
      run: pnpm publish --access public --tag ${{ env.RELEASE_TAG }}
    - name: Push changes to repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin && git push --tags
